{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  Dispatch,\n  Reducer,\n  ReducerAction,\n  ReducerState,\n  SetStateAction,\n  useEffect,\n  useLayoutEffect,\n  useReducer,\n} from \"react\";\n\nexport type Listener<S> = (state: S) => void;\n\n// For SSR / React Native: https://github.com/react-spring/zustand/pull/34\nconst useIsoLayoutEffect =\n  typeof window === \"undefined\" ? useEffect : useLayoutEffect;\n\nexport function createGlobalReducer<R extends Reducer<any, any>>(\n  reducer: R,\n  initialState: ReducerState<R>,\n): [\n  () => ReducerState<R>,\n  {\n    getState: () => ReducerState<R>;\n    dispatch: Dispatch<ReducerAction<R>>;\n    addListener: (listener: Listener<ReducerState<R>>) => void;\n    removeAllListeners: () => void;\n  },\n] {\n  let state: ReducerState<R> = initialState;\n  const listeners = new Set<Listener<ReducerState<R>>>();\n\n  function addListener(listener: Listener<ReducerState<R>>) {\n    listeners.add(listener);\n\n    return () => {\n      listeners.delete(listener);\n    };\n  }\n\n  return [\n    function useGlobalReducer() {\n      const [, forceUpdate] = useReducer(() => [], []);\n\n      useIsoLayoutEffect(() => {\n        const removeListener = addListener(forceUpdate);\n        return removeListener;\n      }, []);\n\n      return state;\n    },\n    {\n      getState() {\n        return state;\n      },\n\n      dispatch(action) {\n        const nextState = reducer(state, action);\n\n        if (!Object.is(state, nextState)) {\n          state = nextState;\n          listeners.forEach((listener) => listener(state));\n        }\n      },\n\n      addListener,\n      removeAllListeners: listeners.clear,\n    },\n  ];\n}\n\nexport function createGlobalState<S>(\n  initialState: S,\n): [\n  () => S,\n  {\n    getState: () => S;\n    setState: Dispatch<SetStateAction<S>>;\n    addListener: (listener: Listener<S>) => void;\n    removeAllListeners: () => void;\n  },\n] {\n  let state: S = initialState;\n  const listeners = new Set<Listener<S>>();\n\n  function addListener(listener: Listener<S>) {\n    listeners.add(listener);\n\n    return () => {\n      listeners.delete(listener);\n    };\n  }\n\n  return [\n    function useGlobalState() {\n      const [, forceUpdate] = useReducer(() => [], []);\n\n      useIsoLayoutEffect(() => {\n        const removeListener = addListener(forceUpdate);\n        return removeListener;\n      }, []);\n\n      return state;\n    },\n    {\n      getState() {\n        return state;\n      },\n\n      setState(value) {\n        const nextState =\n          typeof value === \"function\"\n            ? (value as (prevState: S) => S)(state)\n            : value;\n\n        if (!Object.is(state, nextState)) {\n          state = nextState;\n          listeners.forEach((listener) => listener(state));\n        }\n      },\n\n      addListener,\n      removeAllListeners: listeners.clear,\n    },\n  ];\n}\n"],"names":["useIsoLayoutEffect","window","useEffect","useLayoutEffect","reducer","initialState","state","listeners","Set","addListener","listener","add","delete","forceUpdate","useReducer","getState","dispatch","action","nextState","Object","is","forEach","removeAllListeners","clear","setState","value"],"mappings":"uBAcA,MAAMA,EACc,oBAAXC,OAAyBC,YAAYC,uDAG5CC,EACAC,GAUA,IAAIC,EAAyBD,EAC7B,MAAME,EAAY,IAAIC,IAEtB,SAASC,EAAYC,GAGnB,OAFAH,EAAUI,IAAID,GAEP,KACLH,EAAUK,OAAOF,IAIrB,MAAO,CACL,WACE,OAASG,GAAeC,aAAW,IAAM,GAAI,IAO7C,OALAd,EAAmB,IACMS,EAAYI,GAElC,IAEIP,GAET,CACES,SAAQ,IACCT,EAGTU,SAASC,GACP,MAAMC,EAAYd,EAAQE,EAAOW,GAE5BE,OAAOC,GAAGd,EAAOY,KACpBZ,EAAQY,EACRX,EAAUc,QAASX,GAAaA,EAASJ,MAI7CG,YAAAA,EACAa,mBAAoBf,EAAUgB,4CAMlClB,GAUA,IAAIC,EAAWD,EACf,MAAME,EAAY,IAAIC,IAEtB,SAASC,EAAYC,GAGnB,OAFAH,EAAUI,IAAID,GAEP,KACLH,EAAUK,OAAOF,IAIrB,MAAO,CACL,WACE,OAASG,GAAeC,aAAW,IAAM,GAAI,IAO7C,OALAd,EAAmB,IACMS,EAAYI,GAElC,IAEIP,GAET,CACES,SAAQ,IACCT,EAGTkB,SAASC,GACP,MAAMP,EACa,mBAAVO,EACFA,EAA8BnB,GAC/BmB,EAEDN,OAAOC,GAAGd,EAAOY,KACpBZ,EAAQY,EACRX,EAAUc,QAASX,GAAaA,EAASJ,MAI7CG,YAAAA,EACAa,mBAAoBf,EAAUgB"}